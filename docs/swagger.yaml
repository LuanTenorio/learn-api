basePath: /api
definitions:
  dto.CreateUserDTO:
    properties:
      email:
        maxLength: 60
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      password:
        maxLength: 70
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  dto.LoginDTO:
    properties:
      email:
        maxLength: 60
        type: string
      password:
        maxLength: 70
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  dto.LoginResponseDTO:
    properties:
      token:
        type: string
    type: object
  entity.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  exception.ExceptionImpl:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
info:
  contact: {}
  description: API of the Learn project, which aims to organize and analyze studies
  title: Learn
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and returns a JWT token
      parameters:
      - description: Login data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponseDTO'
        "401":
          description: Wrong password
          schema:
            $ref: '#/definitions/exception.ExceptionImpl'
        "404":
          description: No user with this email
          schema:
            $ref: '#/definitions/exception.ExceptionImpl'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/exception.ExceptionImpl'
      summary: Login
      tags:
      - Auth
  /users:
    post:
      consumes:
      - application/json
      description: Creates a new user
      parameters:
      - description: Data required for the user's acriation
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "409":
          description: There is already a user with this email
          schema:
            $ref: '#/definitions/exception.ExceptionImpl'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/exception.ExceptionImpl'
      summary: New User
      tags:
      - User
swagger: "2.0"
